"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_huacnlee_autocorrect_autocorrect_js"],{

/***/ "./node_modules/@huacnlee/autocorrect/autocorrect.js":
/*!***********************************************************!*\
  !*** ./node_modules/@huacnlee/autocorrect/autocorrect.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"format\": () => (/* reexport safe */ _autocorrect_bg_js__WEBPACK_IMPORTED_MODULE_0__.format),\n/* harmony export */   \"format_html\": () => (/* reexport safe */ _autocorrect_bg_js__WEBPACK_IMPORTED_MODULE_0__.format_html)\n/* harmony export */ });\n/* harmony import */ var _autocorrect_bg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./autocorrect_bg.js */ \"./node_modules/@huacnlee/autocorrect/autocorrect_bg.js\");\n\n\n\n//# sourceURL=webpack:///./node_modules/@huacnlee/autocorrect/autocorrect.js?");

/***/ }),

/***/ "./node_modules/@huacnlee/autocorrect/autocorrect_bg.js":
/*!**************************************************************!*\
  !*** ./node_modules/@huacnlee/autocorrect/autocorrect_bg.js ***!
  \**************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"format\": () => (/* binding */ format),\n/* harmony export */   \"format_html\": () => (/* binding */ format_html)\n/* harmony export */ });\n/* harmony import */ var _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./autocorrect_bg.wasm */ \"./node_modules/@huacnlee/autocorrect/autocorrect_bg.wasm\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(_autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n* Automatically add spaces between Chinese and English words.\n*\n* This method only work for plain text.\n*\n* # Example\n*\n* ```\n* extern crate autocorrect;\n*\n* println!(\"{}\", autocorrect::format(\"学习如何用 Rust 构建 Application\"));\n* // => \"学习如何用 Rust 构建 Application\"\n*\n* println!(\"{}\", autocorrect::format(\"于 3 月 10 日开始\"));\n* // => \"于 3 月 10 日开始\"\n*\n* println!(\"{}\", autocorrect::format(\"既に、世界中の数百という企業が Rust を採用し、高速で低リソースのクロスプラットフォームソリューションを実現しています。\"));\n* // => \"既に、世界中の数百という企業が Rust を採用し、高速で低リソースのクロスプラットフォームソリューションを実現しています。\"\n* ```\n* @param {string} text\n* @returns {string}\n*/\nfunction format(text) {\n    try {\n        const retptr = _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(text, _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.format(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n        _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Format a html content.\n*\n* Example:\n*\n* ```\n* let html = r#\"\n* <article>\n*   <h1>这是 Heading 标题</h1>\n*   <div class=\"content\">\n*     <p>你好 Rust 世界<strong>Bold 文本</strong></p>\n*     <p>这是第二行 p 标签</p>\n*   </div>\n* </article>\n* \"#;\n* autocorrect::format_html(html);\n* ```\n* @param {string} html_str\n* @returns {string}\n*/\nfunction format_html(html_str) {\n    try {\n        const retptr = _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(html_str, _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.format_html(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n        _autocorrect_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1);\n    }\n}\n\n\n\n//# sourceURL=webpack:///./node_modules/@huacnlee/autocorrect/autocorrect_bg.js?");

/***/ }),

/***/ "./node_modules/@huacnlee/autocorrect/autocorrect_bg.wasm":
/*!****************************************************************!*\
  !*** ./node_modules/@huacnlee/autocorrect/autocorrect_bg.wasm ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.id];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name) exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n\n\n// exec wasm module\nwasmExports[\"\"]()\n\n//# sourceURL=webpack:///./node_modules/@huacnlee/autocorrect/autocorrect_bg.wasm?");

/***/ })

}]);